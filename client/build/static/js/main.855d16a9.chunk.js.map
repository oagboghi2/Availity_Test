{"version":3,"sources":["logo.svg","components/styles/formStyles.js","components/registration/Registration.js","components/parse/fileUpload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","theme","container","display","flexDirection","height","spacing","width","overflowY","overflowX","marginTop","marginRight","formRow","justifyContent","alignItems","formRowLeft","formHeader","breakpoints","down","minWidth","marginLeft","up","formHeaderLeft","formField","buttonsRow","padding","submitButton","hiddenInput","fieldDescription","fontWeight","Registration","state","firstName","lastName","npi","address1","address2","city","zip","phone","email","handleChange","props","e","setState","target","value","handleSubmit","preventDefault","dataObj","address","axios","post","then","data","console","log","catch","err","error","message","classes","this","onSubmit","className","Typography","Paper","FormGroup","TextField","required","type","variant","label","onChange","helperText","Button","color","Component","withRouter","withStyles","withTheme","fileUpload","file","fileResponse","handleUploadFile","files","reader","FileReader","onload","evt","postObj","fileString","result","fileName","name","postFileToServer","readAsText","url","content","root","formContentPaper","row","accept","id","multiple","htmlFor","component","button","gutterBottom","headersFound","join","totalRecordsProcessed","totalDuplicateRecords","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.855d16a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const styles = theme => ({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: `calc(100vh - 64px - ${theme.spacing(6)}px)`,\n        width: \"100%\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(2)\n    },\n    \n    formRow: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    formRowLeft: {\n        width: \"100%\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\"\n    },\n    formHeader: {\n        marginTop: theme.spacing(2),\n        [theme.breakpoints.down(\"sm\")]: {\n            minWidth: 0,\n            marginLeft: 0,\n            width: \"100%\"\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            minWidth: `calc(400px - ${theme.spacing(4)}px)`,\n            marginLeft: theme.spacing(2)\n        },\n        textAlign: \"center\"\n    },\n    formHeaderLeft: {\n        marginTop: theme.spacing(2),\n        [theme.breakpoints.down(\"sm\")]: {\n            minWidth: 0,\n            marginLeft: 0,\n            width: \"100%\"\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            minWidth: `calc(400px - ${theme.spacing(4)}px)`,\n            marginLeft: theme.spacing(2)\n        },\n        textAlign: \"left\"\n    },\n    formField: {\n        marginTop: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.down(\"sm\")]: {\n            marginLeft: 0,\n            width: \"100%\"\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            width: `calc(400px - ${theme.spacing(4)}px)`,\n            marginLeft: theme.spacing(2)\n        }\n    },\n    buttonsRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: theme.spacing(2),\n        alignItems: \"flex-end\",\n        justifyContent: \"flex-end\"\n    },\n    submitButton: {\n        marginLeft: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        minWidth: `calc(400px - ${theme.spacing(4)}px)`\n    },\n    hiddenInput: {\n        display: \"none\"\n    },\n    fieldDescription: {\n        display: \"flex\",\n        marginLeft: theme.spacing(2),\n        \"& span\": {\n            marginLeft: theme.spacing(),\n            fontWeight: 900\n        }\n    }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n    TextField,\n    FormGroup,\n    Typography,\n    Button,\n    Paper\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport styles from \"../styles/formStyles.js\";\n\nclass Registration extends Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        npi: \"\",\n        address1: \"\",\n        address2: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        phone: \"\",\n        email: \"\"\n    };\n\n    componentDidMount(){}\n    handleChange = props => e => {\n        this.setState({ [props] : e.target.value })\n    }\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        const {\n            firstName, \n            lastName,\n            npi,\n            address1,\n            address2,\n            city,\n            state,\n            zip,\n            phone,\n            email\n        } = this.state;\n        const dataObj = {\n            firstName,\n            lastName,\n            npi,\n            address: `${address1} ${address2} ${city}, ${state} ${zip}`,\n            phone,\n            email\n        };\n        axios\n            .post(\"/api/providers/registration\", dataObj)\n            .then(({ data }) => {\n                console.log(\"response from registration\", data)\n            })\n            .catch(err => {\n                console.error(\"Error\", err.message)\n            });\n            console.log(\"Submitting\", dataObj)\n    console.log(\"Submitting\", dataObj)\n         }\n\n    render(){\n        const {classes} = this.props;\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} className={\"container\"} >\n                    <Typography className={classes.formHeader}>\n                        Provider Registration\n                    </Typography>\n                    <Paper >\n                        <FormGroup className={\"formRow\"}>\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"First Name\"\n                            onChange={this.handleChange(\"firstName\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"Last Name\"\n                            onChange={this.handleChange(\"lastName\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"NPI Number\"\n                            helperText=\"As it appears on your NPI registration\"\n                            onChange={this.handleChange(\"npi\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"Address Line 1\"\n                            onChange={this.handleChange(\"address1\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"Address Line 2\"\n                            onChange={this.handleChange(\"address2\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"City\"\n                            onChange={this.handleChange(\"city\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"State\"\n                            onChange={this.handleChange(\"state\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"text\"\n                            variant=\"outlined\"\n                            label=\"Zip Code\"\n                            onChange={this.handleChange(\"zip\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"tel\"\n                            variant=\"outlined\"\n                            label=\"Phone Number\"\n                            onChange={this.handleChange(\"phone\")}\n                            />\n                            <TextField className={\"formField\"}\n                            required\n                            type=\"email\"\n                            variant=\"outlined\"\n                            label=\"Email\"\n                            onChange={this.handleChange(\"email\")}\n                            />\n                        </FormGroup>\n\n                        <FormGroup >\n                            <Button\n                                type=\"submit\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className={classes.submitButton}\n                            >\n                                Submit\n                            </Button>\n                        </FormGroup>\n                    </Paper>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    withStyles(styles, { withTheme: true })(Registration)\n);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { FormGroup, Typography, Button, Paper, Input } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport styles from \"../styles/formStyles\";\n\nclass fileUpload extends Component {\n    state = {\n        file: null,\n        fileResponse: null\n    };\n\n    handleUploadFile = e => {\n        if (e.target.files) {\n            const file = e.target.files[0];\n            this.setState({ file });\n        }\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        // First Parse the File into String\n        if (this.state.file) {\n            const reader = new FileReader();\n            reader.onload = evt => {\n                const fileString = evt.target.result;\n                // console.log(\"FILE AS STRING\", fileString);\n                const postObj = { fileString, fileName: this.state.file.name };\n                this.postFileToServer(\"api/parse/\", postObj);\n            };\n            reader.readAsText(this.state.file);\n        }\n    };\n\n    postFileToServer = (url, content) => {\n        axios\n            .post(url, content)\n            .then(({ data }) => {\n                console.log(\n                    \"DATA RECEIVED FROM SUBMITTING ENROLLMENT FILE\",\n                    data\n                );\n                this.setState({ fileResponse: data });\n            })\n            .catch(err => {\n                console.error(\n                    \"FAILURE SUBMITTING ENROLLMENT FILE\",\n                    err.message,\n                    err\n                );\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <form onSubmit={this.handleSubmit} className={classes.root}>\n                \n                <Typography variant=\"subtitle1\" className={classes.formHeader}>\n                    Upload CSV\n                </Typography>\n                <Paper className={classes.formContentPaper}>\n                    <FormGroup row className={classes.formRow}>\n                        <input\n                            accept=\".csv\"\n                            className={classes.hiddenInput}\n                            id=\"enrollment-file-input\"\n                            multiple\n                            type=\"file\"\n                            onChange={this.handleUploadFile}\n                        />\n                        <label htmlFor=\"enrollment-file-input\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                                className={classes.button}\n                            >\n                                Upload CSV\n                            </Button>\n                        </label>\n                        <Typography\n                            variant=\"subtitle1\"\n                            gutterBottom={false}\n                            className={classes.fieldDescription}\n                        >\n                            File Name:{\" \"}\n                            <span>\n                                {this.state.file && this.state.file.name}\n                            </span>\n                        </Typography>\n                        <FormGroup row className={classes.formRow}>\n                            <Button\n                                type=\"submit\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className={classes.submitButton}\n                            >\n                                Submit\n                            </Button>\n                        </FormGroup>\n                    </FormGroup>\n                </Paper>\n                {this.state.fileResponse ? (\n                    <Paper className={classes.formContentPaper}>\n                        <FormGroup row className={classes.formRowLeft}>\n                            <Typography\n                                variant=\"subtitle1\"\n                                className={classes.formHeaderLeft}\n                            >\n                                Headers Found:{\" \"}\n                                <span>\n                                    {this.state.fileResponse.headersFound &&\n                                        this.state.fileResponse.headersFound.join(\n                                            \" | \"\n                                        )}\n                                </span>\n                            </Typography>\n                            <FormGroup\n                                row\n                                className={classes.formRowLeft}\n                            ></FormGroup>\n                            <Typography\n                                variant=\"subtitle1\"\n                                className={classes.formHeaderLeft}\n                            >\n                                Total Records Processed:{\" \"}\n                                <span>\n                                    {this.state.fileResponse\n                                        .totalRecordsProcessed &&\n                                        this.state.fileResponse\n                                            .totalRecordsProcessed}\n                                </span>\n                            </Typography>\n                            <FormGroup\n                                row\n                                className={classes.formRowLeft}\n                            ></FormGroup>\n                            <Typography\n                                variant=\"subtitle1\"\n                                className={classes.formHeaderLeft}\n                            >\n                                Duplicate Records Found:{\" \"}\n                                <span>\n                                    {this.state.fileResponse\n                                        .totalDuplicateRecords &&\n                                        this.state.fileResponse\n                                            .totalDuplicateRecords}\n                                </span>\n                            </Typography>\n                        </FormGroup>\n                    </Paper>\n                ) : null}\n            </form>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles, { withTheme: true })(fileUpload));\n","import React from 'react';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Registration from \"./components/registration/Registration\";\nimport fileUpload from \"./components/parse/fileUpload\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n      <Route exact path = \"/\" component={Registration}/>\n      <Route exact path = \"/parse\" component={fileUpload}/>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}