{"ast":null,"code":"var _jsxFileName = \"/Users/oboagboghidi/Desktop/availity_test/client/src/components/parse/fileUpload.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { FormGroup, Typography, Button, Paper, Input } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport styles from \"../styles/formStyles\";\n\nclass fileUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      fileResponse: null\n    };\n\n    this.handleUploadFile = e => {\n      if (e.target.files) {\n        const file = e.target.files[0];\n        this.setState({\n          file\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // First Parse the File into String\n\n      if (this.state.file) {\n        const reader = new FileReader();\n\n        reader.onload = evt => {\n          const fileString = evt.target.result; // console.log(\"FILE AS STRING\", fileString);\n\n          const postObj = {\n            fileString,\n            fileName: this.state.file.name\n          };\n          this.postFileToServer(\"api/parse/\", postObj);\n        };\n\n        reader.readAsText(this.state.file);\n      }\n    };\n\n    this.postFileToServer = (url, content) => {\n      axios.post(url, content).then(({\n        data\n      }) => {\n        console.log(\"DATA RECEIVED FROM SUBMITTING ENROLLMENT FILE\", data);\n        this.setState({\n          fileResponse: data\n        }); // TODO FIRE AN ACTION AND OR A SNACKBAR MESSAGE TO NOTIFY USER THAT ACTION IS COMPLETE!\n      }).catch(err => {\n        console.error(\"FAILURE SUBMITTING ENROLLMENT FILE\", err.message, err); // TODO FIRE AN ACTION AND OR A SNACKBAR MESSAGE TO NOTIFY USER OF THE FAILURE!\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      className: classes.formHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Enrollment Information\"), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.formHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Please upload the enrollment data by clicking Upload CSV\"), React.createElement(Paper, {\n      className: classes.formContentPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: classes.formRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \".csv\",\n      className: classes.hiddenInput,\n      id: \"enrollment-file-input\",\n      multiple: true,\n      type: \"file\",\n      onChange: this.handleUploadFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"enrollment-file-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Upload CSV\")), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: false,\n      className: classes.fieldDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"File Name:\", \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.file && this.state.file.name)), React.createElement(FormGroup, {\n      row: true,\n      className: classes.formRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.submitButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Submit\")))), this.state.fileResponse ? React.createElement(Paper, {\n      className: classes.formContentPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: classes.formRowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.formHeaderLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Headers Found:\", \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.fileResponse.headersFound && this.state.fileResponse.headersFound.join(\" | \"))), React.createElement(FormGroup, {\n      row: true,\n      className: classes.formRowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.formHeaderLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Total Records Processed:\", \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.fileResponse.totalRecordsProcessed && this.state.fileResponse.totalRecordsProcessed)), React.createElement(FormGroup, {\n      row: true,\n      className: classes.formRowLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.formHeaderLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Duplicate Records Found:\", \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.fileResponse.totalDuplicateRecords && this.state.fileResponse.totalDuplicateRecords)))) : null);\n  }\n\n}\n\nexport default withRouter(withStyles(styles, {\n  withTheme: true\n})(fileUpload));","map":{"version":3,"sources":["/Users/oboagboghidi/Desktop/availity_test/client/src/components/parse/fileUpload.js"],"names":["React","Component","withRouter","withStyles","FormGroup","Typography","Button","Paper","Input","axios","styles","fileUpload","state","file","fileResponse","handleUploadFile","e","target","files","setState","handleSubmit","preventDefault","reader","FileReader","onload","evt","fileString","result","postObj","fileName","name","postFileToServer","readAsText","url","content","post","then","data","console","log","catch","err","error","message","componentDidMount","componentDidUpdate","prevProps","render","classes","props","root","formHeader","formContentPaper","formRow","hiddenInput","button","fieldDescription","submitButton","formRowLeft","formHeaderLeft","headersFound","join","totalRecordsProcessed","totalDuplicateRecords","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { FormGroup, Typography, Button, Paper, Input } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport styles from \"../styles/formStyles\";\n\nclass fileUpload extends Component {\n    state = {\n        file: null,\n        fileResponse: null\n    };\n    componentDidMount() {}\n    componentDidUpdate(prevProps) {}\n\n    handleUploadFile = e => {\n        if (e.target.files) {\n            const file = e.target.files[0];\n            this.setState({ file });\n        }\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        // First Parse the File into String\n        if (this.state.file) {\n            const reader = new FileReader();\n            reader.onload = evt => {\n                const fileString = evt.target.result;\n                // console.log(\"FILE AS STRING\", fileString);\n                const postObj = { fileString, fileName: this.state.file.name };\n                this.postFileToServer(\"api/parse/\", postObj);\n            };\n            reader.readAsText(this.state.file);\n        }\n    };\n\n    postFileToServer = (url, content) => {\n        axios\n            .post(url, content)\n            .then(({ data }) => {\n                console.log(\n                    \"DATA RECEIVED FROM SUBMITTING ENROLLMENT FILE\",\n                    data\n                );\n                this.setState({ fileResponse: data });\n                // TODO FIRE AN ACTION AND OR A SNACKBAR MESSAGE TO NOTIFY USER THAT ACTION IS COMPLETE!\n            })\n            .catch(err => {\n                console.error(\n                    \"FAILURE SUBMITTING ENROLLMENT FILE\",\n                    err.message,\n                    err\n                );\n                // TODO FIRE AN ACTION AND OR A SNACKBAR MESSAGE TO NOTIFY USER OF THE FAILURE!\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <form onSubmit={this.handleSubmit} className={classes.root}>\n                <Typography variant=\"h5\" className={classes.formHeader}>\n                    Enrollment Information\n                </Typography>\n                <Typography variant=\"subtitle1\" className={classes.formHeader}>\n                    Please upload the enrollment data by clicking Upload CSV\n                </Typography>\n                <Paper className={classes.formContentPaper}>\n                    <FormGroup row className={classes.formRow}>\n                        <input\n                            accept=\".csv\"\n                            className={classes.hiddenInput}\n                            id=\"enrollment-file-input\"\n                            multiple\n                            type=\"file\"\n                            onChange={this.handleUploadFile}\n                        />\n                        <label htmlFor=\"enrollment-file-input\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                                className={classes.button}\n                            >\n                                Upload CSV\n                            </Button>\n                        </label>\n                        <Typography\n                            variant=\"subtitle1\"\n                            gutterBottom={false}\n                            className={classes.fieldDescription}\n                        >\n                            File Name:{\" \"}\n                            <span>\n                                {this.state.file && this.state.file.name}\n                            </span>\n                        </Typography>\n                        <FormGroup row className={classes.formRow}>\n                            <Button\n                                type=\"submit\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className={classes.submitButton}\n                            >\n                                Submit\n                            </Button>\n                        </FormGroup>\n                    </FormGroup>\n                </Paper>\n                {this.state.fileResponse ? (\n                    <Paper className={classes.formContentPaper}>\n                        <FormGroup row className={classes.formRowLeft}>\n                            <Typography\n                                variant=\"subtitle1\"\n                                className={classes.formHeaderLeft}\n                            >\n                                Headers Found:{\" \"}\n                                <span>\n                                    {this.state.fileResponse.headersFound &&\n                                        this.state.fileResponse.headersFound.join(\n                                            \" | \"\n                                        )}\n                                </span>\n                            </Typography>\n                            <FormGroup\n                                row\n                                className={classes.formRowLeft}\n                            ></FormGroup>\n                            <Typography\n                                variant=\"subtitle1\"\n                                className={classes.formHeaderLeft}\n                            >\n                                Total Records Processed:{\" \"}\n                                <span>\n                                    {this.state.fileResponse\n                                        .totalRecordsProcessed &&\n                                        this.state.fileResponse\n                                            .totalRecordsProcessed}\n                                </span>\n                            </Typography>\n                            <FormGroup\n                                row\n                                className={classes.formRowLeft}\n                            ></FormGroup>\n                            <Typography\n                                variant=\"subtitle1\"\n                                className={classes.formHeaderLeft}\n                            >\n                                Duplicate Records Found:{\" \"}\n                                <span>\n                                    {this.state.fileResponse\n                                        .totalDuplicateRecords &&\n                                        this.state.fileResponse\n                                            .totalDuplicateRecords}\n                                </span>\n                            </Typography>\n                        </FormGroup>\n                    </Paper>\n                ) : null}\n            </form>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles, { withTheme: true })(fileUpload));\n"]},"metadata":{},"sourceType":"module"}